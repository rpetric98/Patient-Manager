@model WebApp.Models.ExaminationVM
@{
    ViewData["Title"] = "Edit";
    var examinationType = ViewBag.ExaminationTypes as Dictionary<ClassLibrary.Enums.ExaminationType, string>
    ?? new Dictionary<ClassLibrary.Enums.ExaminationType, string>();
}

<h2>Edit</h2>

<h4>Examination</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div class="form-group">
                <label asp-for="DateTime" class="control-label"></label>
                <input asp-for="DateTime" class="form-control" />
                <span asp-validation-for="DateTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExaminationType" class="control-label"></label>
                <select asp-for="ExaminationType" class="form-control">
                    @foreach (var item in examinationType)
                    {
                        <option value="@item.Key" selected="@(item.Key == Model.ExaminationType ? "selected" : null)">
                            @item.Value
                        </option>
                    }
                </select>
                <span asp-validation-for="ExaminationType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PatientId" class="control-label"></label>
                <input asp-for="PatientId" class="form-control" />
                <span asp-validation-for="PatientId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

